import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

import com.sun.org.apache.bcel.internal.generic.IFLT;


class Result {

    /*
     * Complete the 'minimizeBias' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER_ARRAY ratings as parameter.
     */

    public static int minimizeBias(List<Integer> ratings) {
    // Write your code here
    int arr[]=new int[ratings.size()];
    for(int i=0;i<ratings.size();i++)
    {
        arr[i]=ratings.get(i);
    }
    Arrays.sort(arr);
    //int diff=Integer.MAX_VALUE;
    int count;
    int vr[]=new int[arr.length/2];
    int k=0;
    int value=0;
    for(int j=0;j<arr.length;j=j+2)
    {
         vr[k]=arr[j+1]-arr[j];
         k++;
         if(arr[j+1]==arr[j])
         {
             value++;
         }

    }
    if(value>1)
    {
    value = value/2;
    
    count= vr.length - value;
    }
    else{
        count = vr.length;
    }
     return count;
    }

}
public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int ratingsCount = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> ratings = new ArrayList<>();

        for (int i = 0; i < ratingsCount; i++) {
            int ratingsItem = Integer.parseInt(bufferedReader.readLine().trim());
            ratings.add(ratingsItem);
        }

        int result = Result.minimizeBias(ratings);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
