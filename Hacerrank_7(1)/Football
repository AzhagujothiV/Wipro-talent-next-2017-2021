import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;


class Result {

    /*
     * Complete the 'counts' function below.
     *
     * The function is expected to return an INTEGER_ARRAY.
     * The function accepts following parameters:
     *  1. INTEGER_ARRAY teamA
     *  2. INTEGER_ARRAY teamB
     */

    public static List<Integer> counts(List<Integer> teamA, List<Integer> teamB) {
    // Write your code here
    int[] arr1=new int[teamA.size()];
    int[] arr2=new int[teamB.size()];
     for(int i=0;i<teamA.size();i++)
    {
      arr1[i]=teamA.get(i);
    }
    for(int j=0;j<teamB.size();j++)
    {
        arr2[j]=teamB.get(j);
    }
    int[] count=new int[arr2.length];
    int u;
    for(int k=0;k<arr2.length;k++)
    {
         u=0;
        for(int l=0;l<arr1.length;l++)
        {
            if(arr2[k]<=arr1[l])
            {
                u++;
            }
        }
        count[k]=u;
    }
    List<int[]> lin =Arrays.asList(count);
    return lin;
    }
    
}
public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int teamACount = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> teamA = IntStream.range(0, teamACount).mapToObj(i -> {
            try {
                return bufferedReader.readLine().replaceAll("\\s+$", "");
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        })
            .map(String::trim)
            .map(Integer::parseInt)
            .collect(toList());

        int teamBCount = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> teamB = IntStream.range(0, teamBCount).mapToObj(i -> {
            try {
                return bufferedReader.readLine().replaceAll("\\s+$", "");
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        })
            .map(String::trim)
            .map(Integer::parseInt)
            .collect(toList());

        List<Integer> result = Result.counts(teamA, teamB);

        bufferedWriter.write(
            result.stream()
                .map(Object::toString)
                .collect(joining("\n"))
            + "\n"
        );

        bufferedReader.close();
        bufferedWriter.close();
    }
}
